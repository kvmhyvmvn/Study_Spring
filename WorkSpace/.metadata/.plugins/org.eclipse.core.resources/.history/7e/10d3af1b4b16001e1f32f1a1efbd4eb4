<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">



	<!-- 선택한 공지글 변경저장 처리 -->
	<update id="update">
		update notice set title = #{title},
		content=#{content},
		filename = #{filename, jdbcType=VARCHAR}, filepath
		= #{filepath, jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<!-- 선택한 공지글 삭제 처리 -->
	<delete id="delete">
		delete from notice where id = #{id}
	</delete>

	<!-- 선택한 공지글 조회수 증가 처리 -->
	<update id="read">
		update notice set readcnt = readcnt+1
		where id = #{id}
	</update>

	<!-- 선택한 공지글 정보 조회 -->
	<select id="info" resultType="smart.notice.NoticeVO">
		select notice.*, name from notice
		inner join member on writer = userid where
		id = #{id}
	</select>

	<!-- 신규 공지글 저장 -->
	<insert id="insert">
		insert into notice(title, content, writer, filename,
		filepath)
		values (#{title}, #{content}, #{writer}, #{filename,
		jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR})
	</insert>

	<!-- 총 글의 건 수 조회 -->
	<select id="totalList" resultType="integer">
		select count(*) from notice
		where title like %테스트% </select>

	<sql id="searchWhere">
		<choose>
			<!-- 전체 -->
			<when test="search == 'all'">
				where title like '%' || #{keyword} || '%'
				or content like '%' || #{keyword} || '%'
				or writer like '%' || #{keyword} || '%'
			</when>
			<!-- 제목, 내용 -->
			<when test="search == 'title' or search == 'content'">
				where ${search} like '%' || #{keyword} || '%'
			</when>
			<!-- 작성자 -->
			<when test="search == 'writer' ">
				where writer in (select userid from member where name like '%' || #{keyword} || '%')
			</when>
			<!-- 제목 + 내용 -->
			<when test="search == 't_c'">
				
			</when>
		</choose>
	</sql>

	<!-- 공지글 목록 조회 -->
	<select id="list" resultType="smart.notice.NoticeVO">
		select *
		from (select row_number() over(order by id) no, n.*, name
		from
		notice n inner join member m on n.writer = m.userid) n
		where no between
		#{beginList} and #{endList}
		order by no desc

		<!-- select row_number() over(order by id) no, n.*, name from notice n 
			inner join member m on n.writer = m.userid order by no desc -->
	</select>
	<!-- using절 사용하려면 컬럼이름 같아야 함. -->


</mapper>
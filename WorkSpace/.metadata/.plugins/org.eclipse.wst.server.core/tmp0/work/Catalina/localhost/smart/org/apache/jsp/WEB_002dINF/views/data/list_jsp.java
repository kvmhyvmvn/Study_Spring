/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-07-14 06:36:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.data;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Study_Spring/WorkSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/02.Smart/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1684805391722L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h3 class=\"my-4\">공공데이터</h3>\r\n");
      out.write("	<ul class=\"nav nav-pills justify-content-center gap-3 mb-3\">\r\n");
      out.write("		<li class=\"nav-item\"><a class=\"nav-link active\">약국조회</a></li>\r\n");
      out.write("		<li class=\"nav-item\"><a class=\"nav-link active\">유기동물조회</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<div class=\"row mb-3 justify-content-between\">\r\n");
      out.write("		<div class=\"col-auto d-flex gap-2 animal-top\"> <!-- 유기동물 조회시만 사용될 부분 -->\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"col-auto pharmacy-top\"> <!-- 약국조회시만 사용될 부분 -->\r\n");
      out.write("			<div class=\"input-group\">\r\n");
      out.write("				<label class=\"col-form-label me-3\">약국명</label>\r\n");
      out.write("				<input type=\"text\" id=\"name\" class=\"form-control\">\r\n");
      out.write("				<button class=\"btn btn-primary px-3\" id=\"btn-search\"><i class=\"fa-solid fa-magnifying-glass\"></i></button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("		<div class=\"col-auto\">				<!-- 약국/유기동물 조회시 모두 사용될 부분 -->\r\n");
      out.write("			<select class=\"form-select\" id=\"pageList\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</select>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"data-list\"></div>\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/loading.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/include/modal_image.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /WEB-INF/views/data/list.jsp(45,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue(new java.util.Date() );
        // /WEB-INF/views/data/list.jsp(45,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("dd");
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\r\n");
      out.write("	<script src=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=3n13cy7hca\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=f484f730ceb79ccd3a3b419f5ec97ed4\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//약국명 검색시\r\n");
      out.write("$('#name').keyup(function(e){\r\n");
      out.write("	if( e.keyCode==13 ) pharmacy_list( 1 );\r\n");
      out.write("})\r\n");
      out.write("$('#btn-search').click(function(){\r\n");
      out.write("	pharmacy_list( 1 );	\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("// 한 페이지에 보여질 목록 수 변경시\r\n");
      out.write("$('#pageList').change(function(){\r\n");
      out.write("	page.pageList = $(this).val();\r\n");
      out.write("	if($('table.pharmacy').length == 1) pharmacy_list(1);\r\n");
      out.write("	else if($('table.animal').length == 1) animal_list(1);\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	//버튼 강제클릭\r\n");
      out.write("	$('ul.nav-pills li').eq(1).trigger('click');\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("/*  \r\n");
      out.write("$('ul.nav-pills li').click(function(){\r\n");
      out.write("	$('ul.nav-pills li a').removeClass('active');\r\n");
      out.write("	$(this).children('a').addClass('active');\r\n");
      out.write("	\r\n");
      out.write("	var idx = $(this).index();\r\n");
      out.write("	if ( idx==0 ) 			pharmacy_list();\r\n");
      out.write("	else if( idx==1 )		animal_list();\r\n");
      out.write("})\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("$('ul.nav-pills li').on({\r\n");
      out.write("	'click': function(){\r\n");
      out.write("		$('ul.nav-pills li a').removeClass('active');\r\n");
      out.write("		$(this).children('a').addClass('active');\r\n");
      out.write("		\r\n");
      out.write("		var idx = $(this).index();\r\n");
      out.write("		if ( idx==0 ) 			pharmacy_list( 1 );\r\n");
      out.write("		else if( idx==1 )		animal_list( 1 );\r\n");
      out.write("	},\r\n");
      out.write("	'mouseover': function(){\r\n");
      out.write("		$(this).addClass('shadow') //마우스 올린 탭에 그림자 만들기\r\n");
      out.write("	},\r\n");
      out.write("	'mouseleave': function(){\r\n");
      out.write("		$(this).removeClass('shadow')\r\n");
      out.write("	}\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("//약국목록 조회\r\n");
      out.write("function pharmacy_list( pageNo ){\r\n");
      out.write("	$('.pharmacy-top').removeClass('d-none');\r\n");
      out.write("	$('#data-list').empty();\r\n");
      out.write("	$('.pagination').closest('nav').remove(); //페이지목록이 이미 있으면 삭제\r\n");
      out.write("	$('.loading').show();\r\n");
      out.write("	\r\n");
      out.write("	var table = \r\n");
      out.write("	`\r\n");
      out.write("	<table class=\"tb-list pharmacy\">	\r\n");
      out.write("		<colgroup><col width=\"300px\"><col width=\"160px\"><col></colgroup>\r\n");
      out.write("		<thead><tr><th>약국명</th><th>전화번호</th><th>주소</th></tr></thead>\r\n");
      out.write("		<tbody></tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	`;\r\n");
      out.write("	\r\n");
      out.write("	$('#data-list').html( table );\r\n");
      out.write("	\r\n");
      out.write("	table = '';\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: \"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\",\r\n");
      out.write("		data: { pageNo: pageNo, rows: page.pageList, name: $('#name').val()},\r\n");
      out.write("		async: false,\r\n");
      out.write("	}).done(function( response ){\r\n");
      out.write("		console.log( response )\r\n");
      out.write("		response = response.response.body;\r\n");
      out.write("		$(response.items.item).each(function(){\r\n");
      out.write("			table += \r\n");
      out.write("			`\r\n");
      out.write("			<tr><td><a class=\"map text-link\" data-x=\"${this.XPos}\" data-y=\"${this.YPos}\">${ this.yadmNm }</a></td>\r\n");
      out.write("				<td>${ this.telno ? this.telno : '-' }</td>\r\n");
      out.write("				<td class=\"text-start\">${ this.addr }</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			`;			\r\n");
      out.write("		})\r\n");
      out.write("		$('#data-list .pharmacy tbody').html( table );\r\n");
      out.write("		\r\n");
      out.write("		//페이지 목록 표현\r\n");
      out.write("		makePage( response.totalCount, pageNo )\r\n");
      out.write("		// $('.loading').hide()\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	setTimeout(function(){$('.loading').hide()}, 300);\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).on('click', '.pagination a', function(){ // 페이지번호 클릭시\r\n");
      out.write("	if($(this).hasClass('active')) return;\r\n");
      out.write("	if($('table.pharmacy').length > 0) pharmacy_list($(this).data('page'));\r\n");
      out.write("	else if($('table.animal').length > 0) animal_list($(this).data('page'));\r\n");
      out.write("})\r\n");
      out.write(".on('click', '.map', function(){ // 약국명 클릭시 지도에 약국위치 표현하기\r\n");
      out.write("	if($(this).data('x')=='undefined' || $(this).data('y')=='undefined') {\r\n");
      out.write("		alert('위경도가 없어 위치를 표시할 수 없습니다')\r\n");
      out.write("	} else \r\n");
      out.write("//		showKakaoMap($(this));\r\n");
      out.write("		showNaverMap($(this));\r\n");
      out.write("})\r\n");
      out.write(" // 네이버지도로 약국위치 표시\r\n");
      out.write(" function showNaverMap( point ) {\r\n");
      out.write("	$('#modal-image .modal-body').empty();\r\n");
      out.write("	\r\n");
      out.write("	// 지도를 담을 영역 만들기\r\n");
      out.write("	$('#modal-image').after(\"<div id='modal-map' style='width: 668px; height: 700px'></div>\");\r\n");
      out.write("	\r\n");
      out.write("	var xy = new naver.maps.LatLng(point.data('y'), point.data('x'));\r\n");
      out.write("	var mapOptions = {\r\n");
      out.write("		    center: xy,\r\n");
      out.write("		    zoom: 16\r\n");
      out.write("		};\r\n");
      out.write("		var map = new naver.maps.Map('modal-map', mapOptions);\r\n");
      out.write("		\r\n");
      out.write("		// 원하는 위치에 마커 올리기\r\n");
      out.write("		var marker = new naver.maps.Marker({\r\n");
      out.write("		    position: xy,\r\n");
      out.write("		    map: map\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 마커 위에 정보 창 올리기\r\n");
      out.write("		var name = point.text();\r\n");
      out.write("		var infowindow = new naver.maps.InfoWindow({\r\n");
      out.write("	    	content : `<div class='text-danger fw-bold p-2'>${name}</div>`\r\n");
      out.write("		});\r\n");
      out.write("		infowindow.open(map, marker);\r\n");
      out.write("\r\n");
      out.write("		$('#modal-image .modal-body').html($('#modal-map'));\r\n");
      out.write("		new bootstrap.Modal($('#modal-image')).show();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 카카오지도로 약국위치 표시\r\n");
      out.write("function showKakaoMap( point ){\r\n");
      out.write("	$('#modal-image .modal-body').empty();\r\n");
      out.write("	// 지도를 담을 영역 만들기\r\n");
      out.write("	$('#modal-image').after(\"<div id='modal-map' style='width: 668px; height: 700px'></div>\");\r\n");
      out.write("	\r\n");
      out.write("	var xy = new kakao.maps.LatLng(point.data('y'), point.data('x')); // 위(y)/경도(x)\r\n");
      out.write("	var container = document.getElementById('modal-map'); //지도를 담을 영역의 DOM 레퍼런스\r\n");
      out.write("	var options = { //지도를 생성할 때 필요한 기본 옵션\r\n");
      out.write("		center: xy, //지도의 중심좌표.\r\n");
      out.write("		level: 3 //지도의 레벨(확대, 축소 정도)\r\n");
      out.write("	};\r\n");
      out.write("\r\n");
      out.write("	var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\r\n");
      out.write("	\r\n");
      out.write("	// 마커를 생성합니다\r\n");
      out.write("	var marker = new kakao.maps.Marker({\r\n");
      out.write("	    position: xy\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("	marker.setMap(map);\r\n");
      out.write("	\r\n");
      out.write("	// 인포윈도우를 생성합니다\r\n");
      out.write("	var name = point.text();\r\n");
      out.write("	var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("	    position : xy, \r\n");
      out.write("	    content : `<div class='text-danger fw-bold p-2'>${name}</div>`\r\n");
      out.write("	});\r\n");
      out.write("	  \r\n");
      out.write("	// 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다\r\n");
      out.write("	infowindow.open(map, marker);\r\n");
      out.write("	\r\n");
      out.write("	$('#modal-image .modal-body').html($('#modal-map'));\r\n");
      out.write("	new bootstrap.Modal($('#modal-image')).show();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var page = { pageList: 10, blockPage: 10 }; //페이지당보여질목록수, 블럭당보여질페이지수\r\n");
      out.write("//페이지정보 만들기\r\n");
      out.write("function makePage( totalList, curPage ){\r\n");
      out.write("	$('.pagination').closest('nav').remove(); // 페이지목록이 이미 있으면 삭제\r\n");
      out.write("	page.totalList = totalList; //총목록수\r\n");
      out.write("	page.curPage = curPage; //현재페이지번호\r\n");
      out.write("	page.totalPage = Math.ceil( page.totalList / page.pageList );  //총페이지수\r\n");
      out.write("	page.totalBlock = Math.ceil( page.totalPage / page.blockPage ); //총블럭수\r\n");
      out.write("	page.curBlock = Math.ceil( page.curPage / page.blockPage ); //현재블럭번호\r\n");
      out.write("	page.endPage = page.curBlock * page.blockPage ; //끝페이지번호\r\n");
      out.write("	page.beginPage = page.endPage - (page.blockPage-1); //시작페이지번호\r\n");
      out.write("	if( page.totalPage < page.endPage )  page.endPage = page.totalPage;\r\n");
      out.write("	\r\n");
      out.write("	console.log( page )\r\n");
      out.write("	var prev = page.curBlock == 1 ? 'invisible' : '';\r\n");
      out.write("	var next = page.curBlock == page.totalBlock ? 'invisible' : '';\r\n");
      out.write("	var nav = \r\n");
      out.write("		`<nav>\r\n");
      out.write("			<ul class=\"pagination mt-3 justify-content-center\">\r\n");
      out.write("				<!-- 이전 블럭 -->\r\n");
      out.write("			<li class=\"page-item\"><!-- 처음으로 -->\r\n");
      out.write("				<a class=\"page-link ${prev}\" data-page=\"1\"><i class=\"fa-solid fa-angles-left\"></i></a>\r\n");
      out.write("				</li>\r\n");
      out.write("			<li class=\"page-item\"><!-- 이전으로 -->\r\n");
      out.write("				<a class=\"page-link ${prev}\" data-page=\"${page.beginPage-page.blockPage}\"><i class=\"fa-solid fa-angle-left\"></i></a>\r\n");
      out.write("				</li>`;\r\n");
      out.write("				for(var no=page.beginPage; no<=page.endPage; no++) {\r\n");
      out.write("				nav +=\r\n");
      out.write("					`<li class=\"page-item\">\r\n");
      out.write("					${no == page.curPage\r\n");
      out.write("					 ?	`<a class=\"page-link active\">${no }</a>`\r\n");
      out.write("					 :  `<a class=\"page-link\" data-page=\"${no}\">${no}</a>`\r\n");
      out.write("					   }\r\n");
      out.write("					 </li>\r\n");
      out.write("					`;\r\n");
      out.write("			} 					\r\n");
      out.write("				nav +=\r\n");
      out.write("				<!-- 다음 블럭 -->\r\n");
      out.write("					`<li class=\"page-item\"> <!-- 다음 -->\r\n");
      out.write("						<a class=\"page-link ${next}\" data-page=\"${page.endPage+1}\"><i class=\"fa-solid fa-angle-right\"></i></a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"page-item\"> <!-- 마지막 -->\r\n");
      out.write("						<a class=\"page-link ${next}\"  data-page=\"${page.totalPage}\"><i class=\"fa-solid fa-angles-right\"></i></a>\r\n");
      out.write("					</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav>`;\r\n");
      out.write("		$('#data-list').after(nav);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/data/list.jsp(31,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      // /WEB-INF/views/data/list.jsp(31,4) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1);
      // /WEB-INF/views/data/list.jsp(31,4) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(5);
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${10*i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${10*i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("개씩</option>\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/data/list.jsp(46,14) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/js/animal.js?${dd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/data/list.jsp(121,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/data/pharmacy");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }
}
